package me.jadc.jadbreaks.items;

import java.util.ArrayList;
import java.util.Random;

import org.bukkit.Location;
import org.bukkit.Material;
import org.bukkit.NamespacedKey;
import org.bukkit.Particle;
import org.bukkit.Sound;
import org.bukkit.enchantments.Enchantment;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.block.Action;
import org.bukkit.event.player.PlayerInteractEvent;
import org.bukkit.inventory.ItemFlag;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.ShapedRecipe;
import org.bukkit.inventory.meta.ItemMeta;
import org.bukkit.potion.PotionEffect;
import org.bukkit.potion.PotionEffectType;
import org.bukkit.util.Vector;

import me.jadc.jadbreaks.jb;
import net.md_5.bungee.api.ChatColor;

public class Boof implements Listener {
	
	public Boof() { }
	
	public ItemStack getItemStack() {
		ItemStack item = new ItemStack(Material.STICK);
		ItemMeta meta = item.getItemMeta();
		meta.setDisplayName(ChatColor.RESET + "The Boof");
		meta.addEnchant(Enchantment.DURABILITY, 1, true);
		meta.addItemFlags(ItemFlag.HIDE_ENCHANTS);
		item.setItemMeta(meta);
		
		return item;
	}
	
	public void registerRecipe() {
		ShapedRecipe boofRecipe = new ShapedRecipe(new NamespacedKey(jb.instance, "The_Boof"), getItemStack());
		boofRecipe.shape(" pg", " f ", " s ");
		boofRecipe.setIngredient('p', Material.PAPER);
		boofRecipe.setIngredient('g', Material.GRASS);
		boofRecipe.setIngredient('f', Material.FLINT);
		boofRecipe.setIngredient('s', Material.STICK);
		jb.instance.getServer().addRecipe(boofRecipe);
	}

	Random r = new Random();
	@EventHandler
	public void onUse(PlayerInteractEvent e) {
		Player p = e.getPlayer();
		if(e.getAction().equals(Action.RIGHT_CLICK_BLOCK) || e.getAction().equals(Action.RIGHT_CLICK_AIR)) {
			if(p.getInventory().getItemInMainHand() == null) return;
			if(!p.getInventory().getItemInMainHand().hasItemMeta()) return;
			if(!p.getInventory().getItemInMainHand().getItemMeta().hasLore()) return;
			
			if(p.getInventory().getItemInMainHand().getItemMeta().getLore().contains(loreText)) {
				if(p.getEyeLocation().getBlock().getType() == Material.WATER) return;
				
				Location location = p.getEyeLocation();
				Vector direction = location.getDirection();
				int rand = r.nextInt(100) + 1;
				
				p.getWorld().spawnParticle(Particle.CLOUD, location.getX(), location.getY(), 
						location.getZ(), 0, (float) direction.getX(), 1.5, (float) direction.getZ(), 0.2D, null);
				
				p.getWorld().playSound(p.getLocation(), Sound.BLOCK_FIRE_EXTINGUISH, 0.1F, 0.5F);
				
				p.addPotionEffect(new PotionEffect(PotionEffectType.REGENERATION, 3*20, 1));
				p.addPotionEffect(new PotionEffect(PotionEffectType.CONFUSION, 5*20, 1));
				if(rand <= 1) p.addPotionEffect(new PotionEffect(PotionEffectType.LEVITATION, 2*20, 1));
			}
		}
	}
}
